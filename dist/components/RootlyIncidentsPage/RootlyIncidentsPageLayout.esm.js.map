{"version":3,"file":"RootlyIncidentsPageLayout.esm.js","sources":["../../../src/components/RootlyIncidentsPage/RootlyIncidentsPageLayout.tsx"],"sourcesContent":["import { stringifyEntityRef } from '@backstage/catalog-model';\nimport {\n  Content,\n  ContentHeader,\n  Page,\n  Progress\n} from '@backstage/core-components';\nimport { attachComponentData, configApiRef, discoveryApiRef, useApi } from '@backstage/core-plugin-api';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { Box, Grid, TabProps } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { default as React } from 'react';\nimport { useAsync } from 'react-use';\nimport { IncidentsTable } from '../IncidentsTable';\nimport { useRootlyClient } from '../../api';\n\ntype SubRoute = {\n  path: string;\n  title: string;\n  children: JSX.Element;\n  tabProps?: TabProps<React.ElementType, { component?: React.ElementType }>;\n};\n\nconst Route: (props: SubRoute) => null = () => null;\n\n// This causes all mount points that are discovered within this route to use the path of the route itself\nattachComponentData(Route, 'core.gatherMountPoints', true);\n\nexport const RootlyIncidentsPageLayout = ({ organizationId }: { organizationId?: string }) => {\n  const { entity } = useEntity();\n  const configApi = useApi(configApiRef);\n  const discoveryApi = useApi(discoveryApiRef);\n  const rootlyClient = useRootlyClient({discovery: discoveryApi, config: configApi, organizationId: organizationId});\n\n  const entityTriplet = stringifyEntityRef({\n    namespace: entity.metadata.namespace,\n    kind: entity.kind,\n    name: entity.metadata.name,\n  });\n\n  const {\n    value: response,\n    loading,\n    error,\n  } = useAsync(\n    async () =>\n      await rootlyClient.getServices({\n        filter: {\n          backstage_id: entityTriplet,\n        },\n      }),\n    [],\n  );\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <Alert severity=\"error\">{error.message}</Alert>;\n  }\n\n  const service =\n    response && response.data && response.data.length > 0\n      ? response.data[0]\n      : null;\n\n  if (!service) {\n    return (\n      <Page themeId=\"tool\">\n        <Content>\n          <ContentHeader title={entity.metadata.name} />\n          <Grid container spacing={3} direction=\"column\">\n            <Box sx={{ mx: 'auto' }} mt={2}>\n              <Alert severity=\"error\">\n                Looks like this component is not linked to any services in\n                Rootly\n              </Alert>\n            </Box>\n          </Grid>\n        </Content>\n      </Page>\n    );\n  } \n    return (\n      <Page themeId=\"tool\">\n        <Content>\n        <ContentHeader title=\"Ongoing incidents\" />\n          <Grid container spacing={3} direction=\"column\">\n            <Grid item>\n              <IncidentsTable\n                organizationId={organizationId}\n                params={{\n                  filter: {\n                    services: service.attributes.slug,\n                    status: \"started,mitigated\"\n                  },\n                  include:\n                    'environments,services,functionalities,groups,incident_types',\n                }}\n              />\n            </Grid>\n          </Grid>\n          <ContentHeader title=\"Past incidents\" />\n          <Grid container spacing={3} direction=\"column\">\n            <Grid item>\n              <IncidentsTable\n                organizationId={organizationId}\n                params={{\n                  filter: {\n                    services: service.attributes.slug,\n                  },\n                  include:\n                    'environments,services,functionalities,groups,incident_types',\n                }}\n              />\n            </Grid>\n          </Grid>\n        </Content>\n      </Page>\n    );\n  \n};\n\nRootlyIncidentsPageLayout.Route = Route;\n"],"names":[],"mappings":"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"}