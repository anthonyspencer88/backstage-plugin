{"version":3,"file":"RootlyIncidentsPageLayout.esm.js","sources":["../../../src/components/RootlyIncidentsPage/RootlyIncidentsPageLayout.tsx"],"sourcesContent":["import { stringifyEntityRef } from '@backstage/catalog-model';\nimport {\n  Content,\n  ContentHeader,\n  Page,\n  Progress\n} from '@backstage/core-components';\nimport { attachComponentData, useApi } from '@backstage/core-plugin-api';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { Box, Button, Grid, TabProps } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { default as React, useState } from 'react';\nimport { useAsync } from 'react-use';\nimport { IncidentsTable } from '../IncidentsTable';\nimport { ServicesDialog } from '../ServicesDialog';\n\nimport {\n  RootlyApiRef,\n  RootlyEntity,\n  RootlyService,\n} from '@rootly/backstage-plugin-common';\n\ntype SubRoute = {\n  path: string;\n  title: string;\n  children: JSX.Element;\n  tabProps?: TabProps<React.ElementType, { component?: React.ElementType }>;\n};\n\nconst Route: (props: SubRoute) => null = () => null;\n\n// This causes all mount points that are discovered within this route to use the path of the route itself\nattachComponentData(Route, 'core.gatherMountPoints', true);\n\nexport const RootlyIncidentsPageLayout = () => {\n  const { entity } = useEntity();\n  const RootlyApi = useApi(RootlyApiRef);\n\n  const [open, setOpen] = useState(false);\n  const [reload, setReload] = useState(false);\n\n  const handleOpenDialog = () => {\n    setOpen(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpen(false);\n  };\n\n  const handleCloseImport = async (entity: RootlyEntity) => {\n    await RootlyApi.importServiceEntity(entity);\n    setReload(!reload);\n  };\n\n  const handleCloseUpdate = async (\n    entity: RootlyEntity,\n    service: RootlyService,\n    old_service?: RootlyService,\n  ) => {\n    await RootlyApi.updateServiceEntity(entity, service, old_service);\n    setReload(!reload);\n  };\n\n  const entityTriplet = stringifyEntityRef({\n    namespace: entity.metadata.namespace,\n    kind: entity.kind,\n    name: entity.metadata.name,\n  });\n\n  const {\n    value: response,\n    loading,\n    error,\n  } = useAsync(\n    async () =>\n      await RootlyApi.getServices({\n        filter: {\n          backstage_id: entityTriplet,\n        },\n      }),\n    [reload],\n  );\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <Alert severity=\"error\">{error.message}</Alert>;\n  }\n\n  const service =\n    response && response.data && response.data.length > 0\n      ? response.data[0]\n      : null;\n\n  if (!service) {\n    return (\n      <Page themeId=\"tool\">\n        <Content>\n          <ContentHeader title={entity.metadata.name} />\n          <Grid container spacing={3} direction=\"column\">\n            <Box sx={{ mx: 'auto' }} mt={2}>\n              <Alert severity=\"error\">\n                Looks like this component is not linked to any services in\n                Rootly\n              </Alert>\n            </Box>\n            <Box sx={{ mx: 'auto' }} mt={2}>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={handleOpenDialog}\n              >\n                Import or link to an existing Rootly service\n              </Button>\n            </Box>\n            <ServicesDialog\n              open={open}\n              entity={entity as RootlyEntity}\n              handleClose={handleCloseDialog}\n              handleImport={handleCloseImport}\n              handleUpdate={handleCloseUpdate}\n            />\n          </Grid>\n        </Content>\n      </Page>\n    );\n  } \n    return (\n      <Page themeId=\"tool\">\n        <Content>\n        <ContentHeader title=\"Ongoing incidents\" />\n          <Grid container spacing={3} direction=\"column\">\n            <Grid item>\n              <IncidentsTable\n                params={{\n                  filter: {\n                    services: service.attributes.slug,\n                    status: \"started,mitigated\"\n                  },\n                  include:\n                    'environments,services,functionalities,groups,incident_types',\n                }}\n              />\n            </Grid>\n          </Grid>\n          <ContentHeader title=\"Past incidents\" />\n          <Grid container spacing={3} direction=\"column\">\n            <Grid item>\n              <IncidentsTable\n                params={{\n                  filter: {\n                    services: service.attributes.slug,\n                  },\n                  include:\n                    'environments,services,functionalities,groups,incident_types',\n                }}\n              />\n            </Grid>\n          </Grid>\n        </Content>\n      </Page>\n    );\n  \n};\n\nRootlyIncidentsPageLayout.Route = Route;\n"],"names":["entity","service"],"mappings":"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"}