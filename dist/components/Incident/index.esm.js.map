{"version":3,"file":"index.esm.js","sources":["../../../src/components/Incident/index.ts"],"sourcesContent":["import {\n  Environment,\n  Functionality,\n  Team,\n  Incident,\n  IncidentType,\n  Service,\n} from '../../types';\n\nexport class IncidentWrapper {\n  incident: Incident;\n  included: any;\n  constructor(incident: Incident, included: any) {\n    this.incident = incident;\n    this.included = included;\n  }\n\n  environments = (): Environment[] => {\n    if (this.incident.relationships?.environments?.data) {\n      const ids = this.incident.relationships?.environments?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'environments' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n\n  services = (): Service[] => {\n    if (this.incident.relationships?.services?.data) {\n      const ids = this.incident.relationships?.services?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'services' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n\n  functionalities = (): Functionality[] => {\n    if (this.incident.relationships?.functionalities?.data) {\n      const ids = this.incident.relationships?.functionalities?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'functionalities' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n\n  groups = (): Team[] => {\n    if (this.incident.relationships?.groups?.data) {\n      const ids = this.incident.relationships?.groups?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'groups' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n\n  types = (): IncidentType[] => {\n    if (this.incident.relationships?.incident_types?.data) {\n      const ids = this.incident.relationships?.incident_types?.data.map(r => {\n        return r.id;\n      });\n      return this.included?.filter((i: { type: string; id: string }) => {\n        return i.type === 'incident_types' && ids.includes(i.id);\n      });\n    } \n      return [];\n    \n  };\n}\n"],"names":[],"mappings":"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"}