{"version":3,"file":"index-94eee1c6.esm.js","sources":["../../src/components/Entity/EntityActionsMenu.tsx","../../src/components/EntitiesTable/EntitiesTable.tsx","../../src/components/EntitiesTable/EntitiesList.tsx","../../src/components/RootlyPage/DefaultRootlyPageLayout.tsx","../../src/components/RootlyPage/DefaultRootlyPage.tsx","../../src/components/RootlyPage/RootlyPage.tsx"],"sourcesContent":["import { useApi } from '@backstage/core-plugin-api';\nimport {\n  IconButton,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  Typography,\n} from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport SyncIcon from '@material-ui/icons/Sync';\nimport Delete from '@material-ui/icons/Delete';\nimport React, { useState } from 'react';\nimport { RootlyApiRef } from '../../api';\nimport { Entity, Service } from '../../types';\nimport { ServicesDialog } from '../ServicesDialog';\nimport { stringifyEntityRef } from '@backstage/catalog-model';\n\nexport const EntityActionsMenu = ({\n  entity,\n  handleUpdate,\n  handleImport,\n  handleDelete,\n}: {\n  entity: Entity;\n  handleUpdate: Function;\n  handleImport: Function;\n  handleDelete: Function;\n}) => {\n  const RootlyApi = useApi(RootlyApiRef);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseDialog = async () => {\n    setOpenDialog(false);\n  };\n\n  const handleCloseImport = async (entity: Entity) => {\n    setOpenDialog(false);\n    handleImport(entity);\n  };\n\n  const handleCloseUpdate = async (\n    entity: Entity,\n    old_service: Service,\n    service: Service,\n  ) => {\n    setOpenDialog(false);\n    handleUpdate(entity, old_service, service);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleOpenServicesDialog = async (): Promise<void> => {\n    setAnchorEl(null);\n    setOpenDialog(true);\n  };\n\n  const entityTriplet = stringifyEntityRef({\n    namespace: entity.metadata.namespace,\n    kind: entity.kind,\n    name: entity.metadata.name,\n  });\n\n  return (\n    <>\n      {openDialog && (\n        <ServicesDialog\n          open={openDialog}\n          entity={entity}\n          handleClose={handleCloseDialog}\n          handleImport={handleCloseImport}\n          handleUpdate={handleCloseUpdate}\n        />\n      )}\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id={`actions-menu-${entityTriplet}`}\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n        PaperProps={{\n          style: { maxHeight: 48 * 4.5 },\n        }}\n      >\n        {!entity.linkedService && (\n          <MenuItem key=\"import\" onClick={handleOpenServicesDialog}>\n            <ListItemIcon>\n              <SyncIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <Typography variant=\"inherit\" noWrap>\n              Import service in Rootly\n            </Typography>\n          </MenuItem>\n        )}\n\n        <MenuItem key=\"link\" onClick={handleOpenServicesDialog}>\n          <ListItemIcon>\n            <SyncIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <Typography variant=\"inherit\" noWrap>\n            Link to another Rootly service\n          </Typography>\n        </MenuItem>\n\n        {entity.linkedService && (\n          <>\n            <MenuItem\n              key=\"unlink\"\n              onClick={() => handleDelete(entity.linkedService)}\n            >\n              <ListItemIcon>\n                <Delete fontSize=\"small\" />\n              </ListItemIcon>\n              <Typography variant=\"inherit\" noWrap>\n                Unlink\n              </Typography>\n            </MenuItem>\n            <MenuItem key=\"details\" onClick={handleCloseMenu}>\n              <ListItemIcon>\n                <OpenInNewIcon fontSize=\"small\" />\n              </ListItemIcon>\n              <Typography variant=\"inherit\" noWrap>\n                <Link\n                  target=\"blank\"\n                  href={RootlyApi.getServiceDetailsURL(entity.linkedService)}\n                >\n                  View in Rootly\n                </Link>\n              </Typography>\n            </MenuItem>\n          </>\n        )}\n      </Menu>\n    </>\n  );\n};\n","import { stringifyEntityRef } from '@backstage/catalog-model';\nimport { Progress, Table, TableColumn } from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { catalogApiRef, EntityRefLink } from '@backstage/plugin-catalog-react';\nimport Link from '@material-ui/core/Link';\nimport { Alert } from '@material-ui/lab';\nimport React, { useEffect, useState } from 'react';\nimport { useAsync } from 'react-use';\nimport { RootlyApiRef } from '../../api';\nimport {\n  autoImportService,\n  ROOTLY_ANNOTATION_SERVICE_ID,\n  ROOTLY_ANNOTATION_SERVICE_SLUG,\n} from '../../integration';\nimport { Entity, Service } from '../../types';\nimport { EntityActionsMenu } from '../Entity/EntityActionsMenu';\n\nexport const EntitiesTable = () => {\n  const catalogApi = useApi(catalogApiRef);\n  const RootlyApi = useApi(RootlyApiRef);\n  const smallColumnStyle = {\n    width: '5%',\n    maxWidth: '5%',\n  };\n\n  const [reload, setReload] = useState(false);\n\n  const { value, loading, error } = useAsync(\n    async () => await catalogApi.getEntities(),\n  );\n\n  const handleUpdate = async (\n    entity: Entity,\n    service: Service,\n    old_service?: Service,\n  ) => {\n    await RootlyApi.updateEntity(entity, service, old_service);\n    setTimeout(() => setReload(!reload), 500);\n  };\n\n  const handleImport = async (entity: Entity) => {\n    await RootlyApi.importEntity(entity);\n    setTimeout(() => setReload(!reload), 500);\n  };\n\n  const handleDelete = async (service: Service) => {\n    await RootlyApi.deleteEntity(service);\n    setTimeout(() => setReload(!reload), 500);\n  };\n\n  useEffect(() => {\n    catalogApi.getEntities().then(entities => {\n      entities.items.forEach(entity => {\n        const entityTriplet = stringifyEntityRef({\n          namespace: entity.metadata.namespace,\n          kind: entity.kind,\n          name: entity.metadata.name,\n        });\n\n        const service_id_annotation =\n          entity.metadata.annotations?.[ROOTLY_ANNOTATION_SERVICE_ID] ||\n          entity.metadata.annotations?.[ROOTLY_ANNOTATION_SERVICE_SLUG];\n\n        if (service_id_annotation) {\n          RootlyApi.getService(service_id_annotation)\n            .then(annotationServiceResponse => {\n              const annotationService = annotationServiceResponse.data;\n              if (annotationService.attributes.backstage_id && annotationService.attributes.backstage_id != entityTriplet) {\n                RootlyApi.getServices({\n                  filter: {\n                    backstage_id: annotationService.attributes.backstage_id,\n                  },\n                }).then(servicesResponse => {\n                  const service =\n                    servicesResponse &&\n                    servicesResponse.data &&\n                    servicesResponse.data.length > 0\n                      ? servicesResponse.data[0]\n                      : null;\n                  if (service) {\n                    RootlyApi.updateEntity(\n                      entity as Entity,\n                      annotationService,\n                      service,\n                    );\n                  }\n                });\n              } else {\n                RootlyApi.updateEntity(\n                  entity as Entity,\n                  annotationService,\n                );\n              }\n            })\n            .catch(() => {\n              if (autoImportService(entity)) {\n                RootlyApi.importEntity(entity as Entity);\n              }\n            });\n        }\n      });\n    });\n  }, []);\n\n  const fetchService = (entity: Entity, reload: boolean) => {\n    const entityTriplet = stringifyEntityRef({\n      namespace: entity.metadata.namespace,\n      kind: entity.kind,\n      name: entity.metadata.name,\n    });\n    const {\n      value: response,\n      loading,\n      error,\n    } = useAsync(\n      async () =>\n        await RootlyApi.getServices({\n          filter: {\n            backstage_id: entityTriplet,\n          },\n        }),\n      [reload],\n    );\n    if (loading) {\n      return <Progress />;\n    } else if (error) {\n      return <div>Error</div>;\n    }\n    if (response && response.data.length > 0) {\n      entity.linkedService = response.data[0] as Service;\n      return (\n        <Link\n          target=\"blank\"\n          href={RootlyApi.getServiceDetailsURL(entity.linkedService)}\n        >\n          {entity.linkedService.attributes.name}\n        </Link>\n      );\n    } else {\n      entity.linkedService = undefined;\n      return <div>Not Linked</div>;\n    }\n  };\n\n  const columns: TableColumn<Entity>[] = [\n    {\n      title: 'Name',\n      field: 'metadata.name',\n      highlight: true,\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: rowData => {\n        return <EntityRefLink entityRef={rowData} />;\n      },\n    },\n    {\n      title: 'Description',\n      field: 'metadata.description',\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n    },\n    {\n      title: 'Rootly Service',\n      field: 'linked',\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: rowData => {\n        return fetchService(rowData, reload);\n      },\n    },\n    {\n      title: 'Actions',\n      field: 'actions',\n      cellStyle: smallColumnStyle,\n      headerStyle: smallColumnStyle,\n      render: rowData => {\n        const service_id_annotation =\n          rowData.metadata.annotations?.[ROOTLY_ANNOTATION_SERVICE_ID] ||\n          rowData.metadata.annotations?.[ROOTLY_ANNOTATION_SERVICE_SLUG];\n\n        return service_id_annotation ? (\n          <div>Set through entity file</div>\n        ) : (\n          <EntityActionsMenu\n            entity={rowData}\n            handleUpdate={handleUpdate}\n            handleImport={handleImport}\n            handleDelete={handleDelete}\n          />\n        );\n      },\n    },\n  ];\n\n  if (error) {\n    return <Alert severity=\"error\">{error.message}</Alert>;\n  }\n\n  const data = value\n    ? value.items.map(entity => {\n        const entityTriplet = stringifyEntityRef({\n          namespace: entity.metadata.namespace,\n          kind: entity.kind,\n          name: entity.metadata.name,\n        });\n        return { ...entity, id: entityTriplet, linkedService: undefined };\n      })\n    : [];\n\n  return (\n    <Table\n      isLoading={loading}\n      options={{\n        sorting: true,\n        search: true,\n        paging: true,\n        actionsColumnIndex: -1,\n        pageSize: 25,\n        pageSizeOptions: [25, 50, 100, 150, 200],\n        padding: 'dense',\n      }}\n      localization={{ header: { actions: undefined } }}\n      columns={columns}\n      data={data}\n    />\n  );\n};\n","import { EntityListProvider } from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport { EntitiesTable } from './EntitiesTable';\n\nexport const EntitiesList = () => {\n  return (\n    <EntityListProvider>\n      <EntitiesTable />\n    </EntityListProvider>\n  );\n};\n","import { TabProps } from '@material-ui/core';\nimport { Children, default as React, Fragment, isValidElement } from 'react';\n\nimport { attachComponentData } from '@backstage/core-plugin-api';\nimport { Header, Page, RoutedTabs } from '@backstage/core-components';\n\ntype SubRoute = {\n  path: string;\n  title: string;\n  children: JSX.Element;\n  tabProps?: TabProps<React.ElementType, { component?: React.ElementType }>;\n};\n\nconst Route: (props: SubRoute) => null = () => null;\n\n// This causes all mount points that are discovered within this route to use the path of the route itself\nattachComponentData(Route, 'core.gatherMountPoints', true);\n\nfunction createSubRoutesFromChildren(\n  childrenProps: React.ReactNode,\n): SubRoute[] {\n  // Directly comparing child.type with Route will not work with in\n  // combination with react-hot-loader in storybook\n  // https://github.com/gaearon/react-hot-loader/issues/304\n  const routeType = (\n    <Route path=\"\" title=\"\">\n      <div />\n    </Route>\n  ).type;\n\n  return Children.toArray(childrenProps).flatMap(child => {\n    if (!isValidElement(child)) {\n      return [];\n    }\n\n    if (child.type === Fragment) {\n      return createSubRoutesFromChildren(child.props.children);\n    }\n\n    if (child.type !== routeType) {\n      throw new Error('Child of ExploreLayout must be an ExploreLayout.Route');\n    }\n\n    const { path, title, children, tabProps } = child.props;\n    return [{ path, title, children, tabProps }];\n  });\n}\n\ntype LayoutProps = {\n  children?: React.ReactNode;\n};\n\nexport const DefaultRootlyPageLayout = ({ children }: LayoutProps) => {\n  const routes = createSubRoutesFromChildren(children);\n\n  return (\n    <Page themeId=\"tool\">\n      <Header title=\"Rootly\" />\n\n      <RoutedTabs routes={routes} />\n    </Page>\n  );\n};\n\nDefaultRootlyPageLayout.Route = Route;\n","import React from 'react';\nimport { EntitiesList } from '../EntitiesTable';\nimport { IncidentsTable } from '../IncidentsTable';\nimport { ServicesTable } from '../ServicesTable';\nimport { DefaultRootlyPageLayout } from './DefaultRootlyPageLayout';\n\nexport const DefaultRootlyPage = () => {\n  return (\n    <DefaultRootlyPageLayout>\n      <DefaultRootlyPageLayout.Route path=\"incidents\" title=\"Incidents\">\n        <IncidentsTable\n          params={{\n            include:\n              'environments,services,functionalities,groups,incident_types',\n          }}\n        />\n      </DefaultRootlyPageLayout.Route>\n      <DefaultRootlyPageLayout.Route path=\"entities\" title=\"Entities\">\n        <EntitiesList />\n      </DefaultRootlyPageLayout.Route>\n      <DefaultRootlyPageLayout.Route path=\"services\" title=\"Services\">\n        <ServicesTable />\n      </DefaultRootlyPageLayout.Route>\n    </DefaultRootlyPageLayout>\n  );\n};\n","import React from 'react';\nimport { useOutlet } from 'react-router';\nimport { DefaultRootlyPage } from './DefaultRootlyPage';\n\nexport const RootlyPage = () => {\n  const outlet = useOutlet();\n\n  return outlet || <DefaultRootlyPage />;\n};\n"],"names":["entity","reload","loading","error"],"mappings":"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"}